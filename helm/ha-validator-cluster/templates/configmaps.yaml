# ... (previous content remains the same)

---
# templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['{{ .Release.Name }}-node-exporter:9100']
      - job_name: 'validators'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: validator
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: ${1}:3620
      - job_name: 'geth'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: geth
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: ${1}:8545
      - job_name: 'lighthouse'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: lighthouse
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: ${1}:5054
      - job_name: 'charon-relay'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: charon-relay
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: ${1}:3640

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://{{ .Release.Name }}-prometheus:9090
      access: proxy
      isDefault: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-dashboards
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /etc/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-dashboard-definitions
data:
  eth-staking-overview.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.2.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(charon_validator_duties_performed_total[5m])",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Validator Duties Performed",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "schemaVersion": 26,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Ethereum Staking Overview",
      "uid": "ethereum-staking-overview",
      "version": 1
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-config
data:
  grafana.ini: |
    [auth.anonymous]
    enabled = true
    org_name = Main Org.
    org_role = Viewer

    [dashboards]
    default_home_dashboard_path = /etc/grafana/dashboards/eth-staking-overview.json

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-lighthouse-config
data:
  lighthouse-config.yaml: |
    network: {{ .Values.global.network }}
    datadir: /opt/app/beacon
    http: true
    http-address: 0.0.0.0
    http-port: 5052
    metrics: true
    metrics-address: 0.0.0.0
    metrics-port: 5054
    metrics-allow-origin: "*"
    validator-monitor-auto: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-charon-config
data:
  charon-config.yaml: |
    log-level: info
    log-format: json
    beacon-node-endpoints: 
      - http://{{ .Release.Name }}-lighthouse:5052
    p2p-relays:
      - http://{{ .Release.Name }}-charon-relay:3640/enr
    monitoring-address: 0.0.0.0:3620
    validator-api-address: 0.0.0.0:3600